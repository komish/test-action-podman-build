name: Ensure CI is Enabled
# This workflow allows a project to disable workflows based on a repository or
# organizational environment variable. 
#
# Create a repo or org environment variable with its value set to 'true'
# for this workflow to succeed. Any other value should cause this workflow
# to fail.
#
# https://docs.github.com/en/actions/learn-github-actions/variables#creating-configuration-variables-for-a-repository
#
# Example usage, assuming this workflow is local to your repository:
#
# jobs:
#   ensure_ci_enabled:
#     uses: ./.github/workflows/check-ci-enabled.yml
#     with:
#       is-enabled: ${{ vars.CUSTOM_VAR_CI_ENABLED }}
#
#   next_task:
#     needs: ensure_ci_enabled
#     runs-on: ubuntu-latest
#     steps:
#     - ...

on:
  workflow_call:
    inputs:
      is-enabled:
        type: string
        required: true

env:
  # This variable value is what comes from your repo/org/env configuration on GitHub.
  CI_ENABLED: ${{ inputs.configvalue }}

jobs:
  fail_if_ci_disabled:
    runs-on: ubuntu-latest
    steps:
    - name: Check environment variable
      run: |
        env | grep CI_ENABLED
        echo "The value of CI_ENABLED is '${{ env.CI_ENABLED }}'"
        test "${{ env.CI_ENABLED }}" = "true" \
          || { echo "::error::Halting because this repo/org/env configuration has not explicitly enabled this CI."; \
            exit 1 ;}